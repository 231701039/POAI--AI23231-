 N=8
def print_board(board):
    for row in board:
        print(" ".join("Q" if x else "." for x in row))
    print()

def is_safe(board, row, col, N):
    for i in range(row):
        if board[i][col]:
            return False

    for i, j in zip(range(row - 1, -1, -1), range(col - 1, -1, -1)):
        if board[i][j]:
            return False

    for i, j in zip(range(row - 1, -1, -1), range(col + 1, N)):
        if board[i][j]:
            return False

    return True

def solve_n_queens(board, row, N):
    if row == N:
        print_board(board)
        return True
    
    res = False
    for col in range(N):
        if is_safe(board, row, col, N):
            board[row][col] = True
            res = solve_n_queens(board, row + 1, N) or res
            board[row][col] = False  
    
    return res

board = [[False for _ in range(N)] for _ in range(N)]
if not solve_n_queens(board, 0, N):
    print("Solution does not exist")
else:
    print("Solution found!")
